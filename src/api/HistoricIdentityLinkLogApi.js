/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {CountResultDto} from '../model/CountResultDto';
import {ExceptionDto} from '../model/ExceptionDto';
import {HistoricIdentityLinkLogDto} from '../model/HistoricIdentityLinkLogDto';

/**
* HistoricIdentityLinkLog service.
* @module api/HistoricIdentityLinkLogApi
* @version 7.20.0
*/
export class HistoricIdentityLinkLogApi {

    /**
    * Constructs a new HistoricIdentityLinkLogApi. 
    * @alias module:api/HistoricIdentityLinkLogApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getHistoricIdentityLinks operation.
     * @callback moduleapi/HistoricIdentityLinkLogApi~getHistoricIdentityLinksCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/HistoricIdentityLinkLogDto>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Identity Link Logs
     * Queries for historic identity link logs that fulfill given parameters. The size of the result set can be retrieved by using the [Get Identity-Link-Log Count](https://docs.camunda.org/manual/develop/reference/rest/history/identity-links/get-identity-link-query-count/) method.
     * @param {Object} opts Optional parameters
     * @param {String} opts.type Restricts to identity links that have the given type (candidate/assignee/owner).
     * @param {String} opts.userId Restricts to identity links that have the given user id.
     * @param {String} opts.groupId Restricts to identity links that have the given group id.
     * @param {Date} opts.dateBefore Restricts to identity links that have the time before the given time.
     * @param {Date} opts.dateAfter Restricts to identity links that have the time after the given time.
     * @param {String} opts.taskId Restricts to identity links that have the given task id.
     * @param {String} opts.processDefinitionId Restricts to identity links that have the given process definition id.
     * @param {String} opts.processDefinitionKey Restricts to identity links that have the given process definition key.
     * @param {String} opts.operationType Restricts to identity links that have the given operationType (add/delete).
     * @param {String} opts.assignerId Restricts to identity links that have the given assigner id.
     * @param {String} opts.tenantIdIn Filter by a comma-separated list of tenant ids.
     * @param {Boolean} opts.withoutTenantId Only include historic identity links that belong to no tenant. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @param {module:model/String} opts.sortBy Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter.
     * @param {module:model/String} opts.sortOrder Sort the results in a given order. Values may be asc for ascending order or desc for descending order. Must be used in conjunction with the sortBy parameter.
     * @param {Number} opts.firstResult Pagination of results. Specifies the index of the first result to return.
     * @param {Number} opts.maxResults Pagination of results. Specifies the maximum number of results to return. Will return less results if there are no more results left.
     * @param {module:api/HistoricIdentityLinkLogApi~getHistoricIdentityLinksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getHistoricIdentityLinks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'type': opts['type'],'userId': opts['userId'],'groupId': opts['groupId'],'dateBefore': opts['dateBefore'],'dateAfter': opts['dateAfter'],'taskId': opts['taskId'],'processDefinitionId': opts['processDefinitionId'],'processDefinitionKey': opts['processDefinitionKey'],'operationType': opts['operationType'],'assignerId': opts['assignerId'],'tenantIdIn': opts['tenantIdIn'],'withoutTenantId': opts['withoutTenantId'],'sortBy': opts['sortBy'],'sortOrder': opts['sortOrder'],'firstResult': opts['firstResult'],'maxResults': opts['maxResults']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [HistoricIdentityLinkLogDto];

      return this.apiClient.callApi(
        '/history/identity-link-log', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getHistoricIdentityLinksCount operation.
     * @callback moduleapi/HistoricIdentityLinkLogApi~getHistoricIdentityLinksCountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CountResultDto{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Identity Link Log Count
     * Queries for the number of historic identity link logs that fulfill the given parameters. Takes the same parameters as the [Get Identity-Link-Logs](https://docs.camunda.org/manual/develop/reference/rest/history/identity-links/get-identity-link-query/) method.
     * @param {Object} opts Optional parameters
     * @param {String} opts.type Restricts to identity links that have the given type (candidate/assignee/owner).
     * @param {String} opts.userId Restricts to identity links that have the given user id.
     * @param {String} opts.groupId Restricts to identity links that have the given group id.
     * @param {Date} opts.dateBefore Restricts to identity links that have the time before the given time.
     * @param {Date} opts.dateAfter Restricts to identity links that have the time after the given time.
     * @param {String} opts.taskId Restricts to identity links that have the given task id.
     * @param {String} opts.processDefinitionId Restricts to identity links that have the given process definition id.
     * @param {String} opts.processDefinitionKey Restricts to identity links that have the given process definition key.
     * @param {String} opts.operationType Restricts to identity links that have the given operationType (add/delete).
     * @param {String} opts.assignerId Restricts to identity links that have the given assigner id.
     * @param {String} opts.tenantIdIn Filter by a comma-separated list of tenant ids.
     * @param {Boolean} opts.withoutTenantId Only include historic identity links that belong to no tenant. Value may only be &#x60;true&#x60;, as &#x60;false&#x60; is the default behavior.
     * @param {module:api/HistoricIdentityLinkLogApi~getHistoricIdentityLinksCountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getHistoricIdentityLinksCount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        'type': opts['type'],'userId': opts['userId'],'groupId': opts['groupId'],'dateBefore': opts['dateBefore'],'dateAfter': opts['dateAfter'],'taskId': opts['taskId'],'processDefinitionId': opts['processDefinitionId'],'processDefinitionKey': opts['processDefinitionKey'],'operationType': opts['operationType'],'assignerId': opts['assignerId'],'tenantIdIn': opts['tenantIdIn'],'withoutTenantId': opts['withoutTenantId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CountResultDto;

      return this.apiClient.callApi(
        '/history/identity-link-log/count', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}