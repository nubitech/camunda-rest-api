/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ExceptionDto} from '../model/ExceptionDto';
import {HistoricDecisionInstanceStatisticsDto} from '../model/HistoricDecisionInstanceStatisticsDto';

/**
* HistoricDecisionRequirementsDefinition service.
* @module api/HistoricDecisionRequirementsDefinitionApi
* @version 7.20.0
*/
export class HistoricDecisionRequirementsDefinitionApi {

    /**
    * Constructs a new HistoricDecisionRequirementsDefinitionApi. 
    * @alias module:api/HistoricDecisionRequirementsDefinitionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getDecisionStatistics operation.
     * @callback moduleapi/HistoricDecisionRequirementsDefinitionApi~getDecisionStatisticsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/HistoricDecisionInstanceStatisticsDto>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get DRD Statistics
     * Retrieves evaluation statistics of a given decision requirements definition.
     * @param {String} id The id of the decision requirements definition.
     * @param {Object} opts Optional parameters
     * @param {String} opts.decisionInstanceId Restrict query results to be based only on specific evaluation instance of a given decision requirements definition.
     * @param {module:api/HistoricDecisionRequirementsDefinitionApi~getDecisionStatisticsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getDecisionStatistics(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getDecisionStatistics");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'decisionInstanceId': opts['decisionInstanceId']
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['basicAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [HistoricDecisionInstanceStatisticsDto];

      return this.apiClient.callApi(
        '/history/decision-requirements-definition/{id}/statistics', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}