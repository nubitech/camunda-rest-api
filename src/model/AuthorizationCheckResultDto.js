/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The AuthorizationCheckResultDto model module.
 * @module model/AuthorizationCheckResultDto
 * @version 7.20.0
 */
export class AuthorizationCheckResultDto {
  /**
   * Constructs a new <code>AuthorizationCheckResultDto</code>.
   * @alias module:model/AuthorizationCheckResultDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AuthorizationCheckResultDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AuthorizationCheckResultDto} obj Optional instance to populate.
   * @return {module:model/AuthorizationCheckResultDto} The populated <code>AuthorizationCheckResultDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AuthorizationCheckResultDto();
      if (data.hasOwnProperty('permissionName'))
        obj.permissionName = ApiClient.convertToType(data['permissionName'], 'String');
      if (data.hasOwnProperty('resourceName'))
        obj.resourceName = ApiClient.convertToType(data['resourceName'], 'String');
      if (data.hasOwnProperty('resourceId'))
        obj.resourceId = ApiClient.convertToType(data['resourceId'], 'String');
      if (data.hasOwnProperty('isAuthorized'))
        obj.isAuthorized = ApiClient.convertToType(data['isAuthorized'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Name of the permission which was checked.
 * @member {String} permissionName
 */
AuthorizationCheckResultDto.prototype.permissionName = undefined;

/**
 * The name of the resource for which the permission check was performed.
 * @member {String} resourceName
 */
AuthorizationCheckResultDto.prototype.resourceName = undefined;

/**
 * The id of the resource for which the permission check was performed.
 * @member {String} resourceId
 */
AuthorizationCheckResultDto.prototype.resourceId = undefined;

/**
 * True / false for isAuthorized.
 * @member {Boolean} isAuthorized
 */
AuthorizationCheckResultDto.prototype.isAuthorized = undefined;

