/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The HistoricTaskInstanceQueryDtoSorting model module.
 * @module model/HistoricTaskInstanceQueryDtoSorting
 * @version 7.20.0
 */
export class HistoricTaskInstanceQueryDtoSorting {
  /**
   * Constructs a new <code>HistoricTaskInstanceQueryDtoSorting</code>.
   * @alias module:model/HistoricTaskInstanceQueryDtoSorting
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>HistoricTaskInstanceQueryDtoSorting</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HistoricTaskInstanceQueryDtoSorting} obj Optional instance to populate.
   * @return {module:model/HistoricTaskInstanceQueryDtoSorting} The populated <code>HistoricTaskInstanceQueryDtoSorting</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HistoricTaskInstanceQueryDtoSorting();
      if (data.hasOwnProperty('sortBy'))
        obj.sortBy = ApiClient.convertToType(data['sortBy'], 'String');
      if (data.hasOwnProperty('sortOrder'))
        obj.sortOrder = ApiClient.convertToType(data['sortOrder'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>sortBy</code> property.
 * @enum {String}
 * @readonly
 */
HistoricTaskInstanceQueryDtoSorting.SortByEnum = {
  /**
   * value: "taskId"
   * @const
   */
  taskId: "taskId",

  /**
   * value: "activityInstanceId"
   * @const
   */
  activityInstanceId: "activityInstanceId",

  /**
   * value: "processDefinitionId"
   * @const
   */
  processDefinitionId: "processDefinitionId",

  /**
   * value: "processInstanceId"
   * @const
   */
  processInstanceId: "processInstanceId",

  /**
   * value: "executionId"
   * @const
   */
  executionId: "executionId",

  /**
   * value: "duration"
   * @const
   */
  duration: "duration",

  /**
   * value: "endTime"
   * @const
   */
  endTime: "endTime",

  /**
   * value: "startTime"
   * @const
   */
  startTime: "startTime",

  /**
   * value: "taskName"
   * @const
   */
  taskName: "taskName",

  /**
   * value: "taskDescription"
   * @const
   */
  taskDescription: "taskDescription",

  /**
   * value: "assignee"
   * @const
   */
  assignee: "assignee",

  /**
   * value: "owner"
   * @const
   */
  owner: "owner",

  /**
   * value: "dueDate"
   * @const
   */
  dueDate: "dueDate",

  /**
   * value: "followUpDate"
   * @const
   */
  followUpDate: "followUpDate",

  /**
   * value: "deleteReason"
   * @const
   */
  deleteReason: "deleteReason",

  /**
   * value: "taskDefinitionKey"
   * @const
   */
  taskDefinitionKey: "taskDefinitionKey",

  /**
   * value: "priority"
   * @const
   */
  priority: "priority",

  /**
   * value: "caseDefinitionId"
   * @const
   */
  caseDefinitionId: "caseDefinitionId",

  /**
   * value: "caseInstanceId"
   * @const
   */
  caseInstanceId: "caseInstanceId",

  /**
   * value: "caseExecutionId"
   * @const
   */
  caseExecutionId: "caseExecutionId",

  /**
   * value: "tenantId"
   * @const
   */
  tenantId: "tenantId"
};
/**
 * Sort the results lexicographically by a given criterion. Must be used in conjunction with the sortOrder parameter.
 * @member {module:model/HistoricTaskInstanceQueryDtoSorting.SortByEnum} sortBy
 */
HistoricTaskInstanceQueryDtoSorting.prototype.sortBy = undefined;

/**
 * Allowed values for the <code>sortOrder</code> property.
 * @enum {String}
 * @readonly
 */
HistoricTaskInstanceQueryDtoSorting.SortOrderEnum = {
  /**
   * value: "asc"
   * @const
   */
  asc: "asc",

  /**
   * value: "desc"
   * @const
   */
  desc: "desc"
};
/**
 * Sort the results in a given order. Values may be `asc` for ascending order or `desc` for descending order. Must be used in conjunction with the sortBy parameter.
 * @member {module:model/HistoricTaskInstanceQueryDtoSorting.SortOrderEnum} sortOrder
 */
HistoricTaskInstanceQueryDtoSorting.prototype.sortOrder = undefined;

