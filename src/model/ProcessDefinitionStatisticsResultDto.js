/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {IncidentStatisticsResultDto} from './IncidentStatisticsResultDto';
import {ProcessDefinitionDto} from './ProcessDefinitionDto';

/**
 * The ProcessDefinitionStatisticsResultDto model module.
 * @module model/ProcessDefinitionStatisticsResultDto
 * @version 7.20.0
 */
export class ProcessDefinitionStatisticsResultDto {
  /**
   * Constructs a new <code>ProcessDefinitionStatisticsResultDto</code>.
   * @alias module:model/ProcessDefinitionStatisticsResultDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ProcessDefinitionStatisticsResultDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ProcessDefinitionStatisticsResultDto} obj Optional instance to populate.
   * @return {module:model/ProcessDefinitionStatisticsResultDto} The populated <code>ProcessDefinitionStatisticsResultDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ProcessDefinitionStatisticsResultDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('instances'))
        obj.instances = ApiClient.convertToType(data['instances'], 'Number');
      if (data.hasOwnProperty('failedJobs'))
        obj.failedJobs = ApiClient.convertToType(data['failedJobs'], 'Number');
      if (data.hasOwnProperty('incidents'))
        obj.incidents = ApiClient.convertToType(data['incidents'], [IncidentStatisticsResultDto]);
      if (data.hasOwnProperty('definition'))
        obj.definition = ProcessDefinitionDto.constructFromObject(data['definition']);
    }
    return obj;
  }
}

/**
 * The id of the process definition the results are aggregated for.
 * @member {String} id
 */
ProcessDefinitionStatisticsResultDto.prototype.id = undefined;

/**
 * The total number of running process instances of this process definition.
 * @member {Number} instances
 */
ProcessDefinitionStatisticsResultDto.prototype.instances = undefined;

/**
 * The total number of failed jobs for the running instances. **Note**: Will be `0` (not `null`), if failed jobs were excluded.
 * @member {Number} failedJobs
 */
ProcessDefinitionStatisticsResultDto.prototype.failedJobs = undefined;

/**
 * Each item in the resulting array is an object which contains `incidentType` and `incidentCount`. **Note**: Will be an empty array, if `incidents` or `incidentsForType` were excluded. Furthermore, the array will be also empty if no incidents were found.
 * @member {Array.<module:model/IncidentStatisticsResultDto>} incidents
 */
ProcessDefinitionStatisticsResultDto.prototype.incidents = undefined;

/**
 * @member {module:model/ProcessDefinitionDto} definition
 */
ProcessDefinitionStatisticsResultDto.prototype.definition = undefined;

