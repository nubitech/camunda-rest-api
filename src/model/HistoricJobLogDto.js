/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The HistoricJobLogDto model module.
 * @module model/HistoricJobLogDto
 * @version 7.20.0
 */
export class HistoricJobLogDto {
  /**
   * Constructs a new <code>HistoricJobLogDto</code>.
   * @alias module:model/HistoricJobLogDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>HistoricJobLogDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HistoricJobLogDto} obj Optional instance to populate.
   * @return {module:model/HistoricJobLogDto} The populated <code>HistoricJobLogDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HistoricJobLogDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('timestamp'))
        obj.timestamp = ApiClient.convertToType(data['timestamp'], 'Date');
      if (data.hasOwnProperty('removalTime'))
        obj.removalTime = ApiClient.convertToType(data['removalTime'], 'Date');
      if (data.hasOwnProperty('jobId'))
        obj.jobId = ApiClient.convertToType(data['jobId'], 'String');
      if (data.hasOwnProperty('jobDueDate'))
        obj.jobDueDate = ApiClient.convertToType(data['jobDueDate'], 'Date');
      if (data.hasOwnProperty('jobRetries'))
        obj.jobRetries = ApiClient.convertToType(data['jobRetries'], 'Number');
      if (data.hasOwnProperty('jobPriority'))
        obj.jobPriority = ApiClient.convertToType(data['jobPriority'], 'Number');
      if (data.hasOwnProperty('jobExceptionMessage'))
        obj.jobExceptionMessage = ApiClient.convertToType(data['jobExceptionMessage'], 'String');
      if (data.hasOwnProperty('failedActivityId'))
        obj.failedActivityId = ApiClient.convertToType(data['failedActivityId'], 'String');
      if (data.hasOwnProperty('jobDefinitionId'))
        obj.jobDefinitionId = ApiClient.convertToType(data['jobDefinitionId'], 'String');
      if (data.hasOwnProperty('jobDefinitionType'))
        obj.jobDefinitionType = ApiClient.convertToType(data['jobDefinitionType'], 'String');
      if (data.hasOwnProperty('jobDefinitionConfiguration'))
        obj.jobDefinitionConfiguration = ApiClient.convertToType(data['jobDefinitionConfiguration'], 'String');
      if (data.hasOwnProperty('activityId'))
        obj.activityId = ApiClient.convertToType(data['activityId'], 'String');
      if (data.hasOwnProperty('executionId'))
        obj.executionId = ApiClient.convertToType(data['executionId'], 'String');
      if (data.hasOwnProperty('processInstanceId'))
        obj.processInstanceId = ApiClient.convertToType(data['processInstanceId'], 'String');
      if (data.hasOwnProperty('processDefinitionId'))
        obj.processDefinitionId = ApiClient.convertToType(data['processDefinitionId'], 'String');
      if (data.hasOwnProperty('processDefinitionKey'))
        obj.processDefinitionKey = ApiClient.convertToType(data['processDefinitionKey'], 'String');
      if (data.hasOwnProperty('deploymentId'))
        obj.deploymentId = ApiClient.convertToType(data['deploymentId'], 'String');
      if (data.hasOwnProperty('rootProcessInstanceId'))
        obj.rootProcessInstanceId = ApiClient.convertToType(data['rootProcessInstanceId'], 'String');
      if (data.hasOwnProperty('tenantId'))
        obj.tenantId = ApiClient.convertToType(data['tenantId'], 'String');
      if (data.hasOwnProperty('hostname'))
        obj.hostname = ApiClient.convertToType(data['hostname'], 'String');
      if (data.hasOwnProperty('creationLog'))
        obj.creationLog = ApiClient.convertToType(data['creationLog'], 'Boolean');
      if (data.hasOwnProperty('failureLog'))
        obj.failureLog = ApiClient.convertToType(data['failureLog'], 'Boolean');
      if (data.hasOwnProperty('successLog'))
        obj.successLog = ApiClient.convertToType(data['successLog'], 'Boolean');
      if (data.hasOwnProperty('deletionLog'))
        obj.deletionLog = ApiClient.convertToType(data['deletionLog'], 'Boolean');
    }
    return obj;
  }
}

/**
 * The id of the log entry.
 * @member {String} id
 */
HistoricJobLogDto.prototype.id = undefined;

/**
 * The time when the log entry has been written.
 * @member {Date} timestamp
 */
HistoricJobLogDto.prototype.timestamp = undefined;

/**
 * The time after which the log entry should be removed by the History Cleanup job. Default format `yyyy-MM-dd'T'HH:mm:ss.SSSZ`. For further info see the [docs](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/)
 * @member {Date} removalTime
 */
HistoricJobLogDto.prototype.removalTime = undefined;

/**
 * The id of the associated job.
 * @member {String} jobId
 */
HistoricJobLogDto.prototype.jobId = undefined;

/**
 * The date on which the associated job is supposed to be processed.
 * @member {Date} jobDueDate
 */
HistoricJobLogDto.prototype.jobDueDate = undefined;

/**
 * The number of retries the associated job has left.
 * @member {Number} jobRetries
 */
HistoricJobLogDto.prototype.jobRetries = undefined;

/**
 * The execution priority the job had when the log entry was created.
 * @member {Number} jobPriority
 */
HistoricJobLogDto.prototype.jobPriority = undefined;

/**
 * The message of the exception that occurred by executing the associated job.
 * @member {String} jobExceptionMessage
 */
HistoricJobLogDto.prototype.jobExceptionMessage = undefined;

/**
 * The id of the activity on which the last exception occurred by executing the associated job.
 * @member {String} failedActivityId
 */
HistoricJobLogDto.prototype.failedActivityId = undefined;

/**
 * The id of the job definition on which the associated job was created.
 * @member {String} jobDefinitionId
 */
HistoricJobLogDto.prototype.jobDefinitionId = undefined;

/**
 * The job definition type of the associated job. See the [User Guide](https://docs.camunda.org/manual/develop/user-guide/process-engine/the-job-executor/#job-creation) for more information about job definition types.
 * @member {String} jobDefinitionType
 */
HistoricJobLogDto.prototype.jobDefinitionType = undefined;

/**
 * The job definition configuration type of the associated job.
 * @member {String} jobDefinitionConfiguration
 */
HistoricJobLogDto.prototype.jobDefinitionConfiguration = undefined;

/**
 * The id of the activity on which the associated job was created.
 * @member {String} activityId
 */
HistoricJobLogDto.prototype.activityId = undefined;

/**
 * The execution id on which the associated job was created.
 * @member {String} executionId
 */
HistoricJobLogDto.prototype.executionId = undefined;

/**
 * The id of the process instance on which the associated job was created.
 * @member {String} processInstanceId
 */
HistoricJobLogDto.prototype.processInstanceId = undefined;

/**
 * The id of the process definition which the associated job belongs to.
 * @member {String} processDefinitionId
 */
HistoricJobLogDto.prototype.processDefinitionId = undefined;

/**
 * The key of the process definition which the associated job belongs to.
 * @member {String} processDefinitionKey
 */
HistoricJobLogDto.prototype.processDefinitionKey = undefined;

/**
 * The id of the deployment which the associated job belongs to.
 * @member {String} deploymentId
 */
HistoricJobLogDto.prototype.deploymentId = undefined;

/**
 * The process instance id of the root process instance that initiated the process which the associated job belongs to.
 * @member {String} rootProcessInstanceId
 */
HistoricJobLogDto.prototype.rootProcessInstanceId = undefined;

/**
 * The id of the tenant that this historic job log entry belongs to.
 * @member {String} tenantId
 */
HistoricJobLogDto.prototype.tenantId = undefined;

/**
 *  The name of the host of the Process Engine where the job of this historic job log entry was executed.
 * @member {String} hostname
 */
HistoricJobLogDto.prototype.hostname = undefined;

/**
 * A flag indicating whether this log represents the creation of the associated job.
 * @member {Boolean} creationLog
 */
HistoricJobLogDto.prototype.creationLog = undefined;

/**
 * A flag indicating whether this log represents the failed execution of the associated job.
 * @member {Boolean} failureLog
 */
HistoricJobLogDto.prototype.failureLog = undefined;

/**
 * A flag indicating whether this log represents the successful execution of the associated job.
 * @member {Boolean} successLog
 */
HistoricJobLogDto.prototype.successLog = undefined;

/**
 * A flag indicating whether this log represents the deletion of the associated job.
 * @member {Boolean} deletionLog
 */
HistoricJobLogDto.prototype.deletionLog = undefined;

