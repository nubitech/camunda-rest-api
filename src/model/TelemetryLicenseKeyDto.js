/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The TelemetryLicenseKeyDto model module.
 * @module model/TelemetryLicenseKeyDto
 * @version 7.20.0
 */
export class TelemetryLicenseKeyDto {
  /**
   * Constructs a new <code>TelemetryLicenseKeyDto</code>.
   * @alias module:model/TelemetryLicenseKeyDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>TelemetryLicenseKeyDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TelemetryLicenseKeyDto} obj Optional instance to populate.
   * @return {module:model/TelemetryLicenseKeyDto} The populated <code>TelemetryLicenseKeyDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TelemetryLicenseKeyDto();
      if (data.hasOwnProperty('customer'))
        obj.customer = ApiClient.convertToType(data['customer'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('valid-until'))
        obj.validUntil = ApiClient.convertToType(data['valid-until'], 'Date');
      if (data.hasOwnProperty('unlimited'))
        obj.unlimited = ApiClient.convertToType(data['unlimited'], 'Boolean');
      if (data.hasOwnProperty('features'))
        obj.features = ApiClient.convertToType(data['features'], {'String': 'String'});
      if (data.hasOwnProperty('raw'))
        obj.raw = ApiClient.convertToType(data['raw'], 'String');
    }
    return obj;
  }
}

/**
 * The name of the customer the license was issued for.
 * @member {String} customer
 */
TelemetryLicenseKeyDto.prototype.customer = undefined;

/**
 * The license type.
 * @member {String} type
 */
TelemetryLicenseKeyDto.prototype.type = undefined;

/**
 * The expiration date of the license.
 * @member {Date} validUntil
 */
TelemetryLicenseKeyDto.prototype.validUntil = undefined;

/**
 * Flag that indicates if the license is unlimited.
 * @member {Boolean} unlimited
 */
TelemetryLicenseKeyDto.prototype.unlimited = undefined;

/**
 * A map of features included in the license.
 * @member {Object.<String, String>} features
 */
TelemetryLicenseKeyDto.prototype.features = undefined;

/**
 * The raw license information.
 * @member {String} raw
 */
TelemetryLicenseKeyDto.prototype.raw = undefined;

