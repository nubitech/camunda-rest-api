/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The HistoricTaskInstanceDto model module.
 * @module model/HistoricTaskInstanceDto
 * @version 7.20.0
 */
export class HistoricTaskInstanceDto {
  /**
   * Constructs a new <code>HistoricTaskInstanceDto</code>.
   * @alias module:model/HistoricTaskInstanceDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>HistoricTaskInstanceDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HistoricTaskInstanceDto} obj Optional instance to populate.
   * @return {module:model/HistoricTaskInstanceDto} The populated <code>HistoricTaskInstanceDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HistoricTaskInstanceDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('processDefinitionKey'))
        obj.processDefinitionKey = ApiClient.convertToType(data['processDefinitionKey'], 'String');
      if (data.hasOwnProperty('processDefinitionId'))
        obj.processDefinitionId = ApiClient.convertToType(data['processDefinitionId'], 'String');
      if (data.hasOwnProperty('processInstanceId'))
        obj.processInstanceId = ApiClient.convertToType(data['processInstanceId'], 'String');
      if (data.hasOwnProperty('executionId'))
        obj.executionId = ApiClient.convertToType(data['executionId'], 'String');
      if (data.hasOwnProperty('caseDefinitionKey'))
        obj.caseDefinitionKey = ApiClient.convertToType(data['caseDefinitionKey'], 'String');
      if (data.hasOwnProperty('caseDefinitionId'))
        obj.caseDefinitionId = ApiClient.convertToType(data['caseDefinitionId'], 'String');
      if (data.hasOwnProperty('caseInstanceId'))
        obj.caseInstanceId = ApiClient.convertToType(data['caseInstanceId'], 'String');
      if (data.hasOwnProperty('caseExecutionId'))
        obj.caseExecutionId = ApiClient.convertToType(data['caseExecutionId'], 'String');
      if (data.hasOwnProperty('activityInstanceId'))
        obj.activityInstanceId = ApiClient.convertToType(data['activityInstanceId'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('deleteReason'))
        obj.deleteReason = ApiClient.convertToType(data['deleteReason'], 'String');
      if (data.hasOwnProperty('owner'))
        obj.owner = ApiClient.convertToType(data['owner'], 'String');
      if (data.hasOwnProperty('assignee'))
        obj.assignee = ApiClient.convertToType(data['assignee'], 'String');
      if (data.hasOwnProperty('startTime'))
        obj.startTime = ApiClient.convertToType(data['startTime'], 'Date');
      if (data.hasOwnProperty('endTime'))
        obj.endTime = ApiClient.convertToType(data['endTime'], 'Date');
      if (data.hasOwnProperty('duration'))
        obj.duration = ApiClient.convertToType(data['duration'], 'Number');
      if (data.hasOwnProperty('taskDefinitionKey'))
        obj.taskDefinitionKey = ApiClient.convertToType(data['taskDefinitionKey'], 'String');
      if (data.hasOwnProperty('priority'))
        obj.priority = ApiClient.convertToType(data['priority'], 'Number');
      if (data.hasOwnProperty('due'))
        obj.due = ApiClient.convertToType(data['due'], 'Date');
      if (data.hasOwnProperty('parentTaskId'))
        obj.parentTaskId = ApiClient.convertToType(data['parentTaskId'], 'String');
      if (data.hasOwnProperty('followUp'))
        obj.followUp = ApiClient.convertToType(data['followUp'], 'Date');
      if (data.hasOwnProperty('tenantId'))
        obj.tenantId = ApiClient.convertToType(data['tenantId'], 'String');
      if (data.hasOwnProperty('removalTime'))
        obj.removalTime = ApiClient.convertToType(data['removalTime'], 'Date');
      if (data.hasOwnProperty('rootProcessInstanceId'))
        obj.rootProcessInstanceId = ApiClient.convertToType(data['rootProcessInstanceId'], 'String');
    }
    return obj;
  }
}

/**
 * The task id.
 * @member {String} id
 */
HistoricTaskInstanceDto.prototype.id = undefined;

/**
 * The key of the process definition the task belongs to.
 * @member {String} processDefinitionKey
 */
HistoricTaskInstanceDto.prototype.processDefinitionKey = undefined;

/**
 * The id of the process definition the task belongs to.
 * @member {String} processDefinitionId
 */
HistoricTaskInstanceDto.prototype.processDefinitionId = undefined;

/**
 * The id of the process instance the task belongs to.
 * @member {String} processInstanceId
 */
HistoricTaskInstanceDto.prototype.processInstanceId = undefined;

/**
 * The id of the execution the task belongs to.
 * @member {String} executionId
 */
HistoricTaskInstanceDto.prototype.executionId = undefined;

/**
 * The key of the case definition the task belongs to.
 * @member {String} caseDefinitionKey
 */
HistoricTaskInstanceDto.prototype.caseDefinitionKey = undefined;

/**
 * The id of the case definition the task belongs to.
 * @member {String} caseDefinitionId
 */
HistoricTaskInstanceDto.prototype.caseDefinitionId = undefined;

/**
 * The id of the case instance the task belongs to.
 * @member {String} caseInstanceId
 */
HistoricTaskInstanceDto.prototype.caseInstanceId = undefined;

/**
 * The id of the case execution the task belongs to.
 * @member {String} caseExecutionId
 */
HistoricTaskInstanceDto.prototype.caseExecutionId = undefined;

/**
 * The id of the activity that this object is an instance of.
 * @member {String} activityInstanceId
 */
HistoricTaskInstanceDto.prototype.activityInstanceId = undefined;

/**
 * The task name.
 * @member {String} name
 */
HistoricTaskInstanceDto.prototype.name = undefined;

/**
 * The task's description.
 * @member {String} description
 */
HistoricTaskInstanceDto.prototype.description = undefined;

/**
 * The task's delete reason.
 * @member {String} deleteReason
 */
HistoricTaskInstanceDto.prototype.deleteReason = undefined;

/**
 * The owner's id.
 * @member {String} owner
 */
HistoricTaskInstanceDto.prototype.owner = undefined;

/**
 * The assignee's id.
 * @member {String} assignee
 */
HistoricTaskInstanceDto.prototype.assignee = undefined;

/**
 * The time the task was started. Default [format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} startTime
 */
HistoricTaskInstanceDto.prototype.startTime = undefined;

/**
 * The time the task ended. Default [format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} endTime
 */
HistoricTaskInstanceDto.prototype.endTime = undefined;

/**
 * The time the task took to finish (in milliseconds).
 * @member {Number} duration
 */
HistoricTaskInstanceDto.prototype.duration = undefined;

/**
 * The task's key.
 * @member {String} taskDefinitionKey
 */
HistoricTaskInstanceDto.prototype.taskDefinitionKey = undefined;

/**
 * The task's priority.
 * @member {Number} priority
 */
HistoricTaskInstanceDto.prototype.priority = undefined;

/**
 * The task's due date. Default [format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} due
 */
HistoricTaskInstanceDto.prototype.due = undefined;

/**
 * The id of the parent task, if this task is a subtask.
 * @member {String} parentTaskId
 */
HistoricTaskInstanceDto.prototype.parentTaskId = undefined;

/**
 * The follow-up date for the task. Default [format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} followUp
 */
HistoricTaskInstanceDto.prototype.followUp = undefined;

/**
 * The tenant id of the task instance.
 * @member {String} tenantId
 */
HistoricTaskInstanceDto.prototype.tenantId = undefined;

/**
 * The time after which the task should be removed by the History Cleanup job. Default [format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} removalTime
 */
HistoricTaskInstanceDto.prototype.removalTime = undefined;

/**
 * The process instance id of the root process instance that initiated the process containing this task.
 * @member {String} rootProcessInstanceId
 */
HistoricTaskInstanceDto.prototype.rootProcessInstanceId = undefined;

