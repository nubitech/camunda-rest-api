/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {HistoricProcessInstanceQueryDto} from './HistoricProcessInstanceQueryDto';
import {ProcessInstanceQueryDto} from './ProcessInstanceQueryDto';

/**
 * The DeleteProcessInstancesDto model module.
 * @module model/DeleteProcessInstancesDto
 * @version 7.20.0
 */
export class DeleteProcessInstancesDto {
  /**
   * Constructs a new <code>DeleteProcessInstancesDto</code>.
   * @alias module:model/DeleteProcessInstancesDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DeleteProcessInstancesDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeleteProcessInstancesDto} obj Optional instance to populate.
   * @return {module:model/DeleteProcessInstancesDto} The populated <code>DeleteProcessInstancesDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DeleteProcessInstancesDto();
      if (data.hasOwnProperty('processInstanceIds'))
        obj.processInstanceIds = ApiClient.convertToType(data['processInstanceIds'], ['String']);
      if (data.hasOwnProperty('deleteReason'))
        obj.deleteReason = ApiClient.convertToType(data['deleteReason'], 'String');
      if (data.hasOwnProperty('skipCustomListeners'))
        obj.skipCustomListeners = ApiClient.convertToType(data['skipCustomListeners'], 'Boolean');
      if (data.hasOwnProperty('skipSubprocesses'))
        obj.skipSubprocesses = ApiClient.convertToType(data['skipSubprocesses'], 'Boolean');
      if (data.hasOwnProperty('processInstanceQuery'))
        obj.processInstanceQuery = ProcessInstanceQueryDto.constructFromObject(data['processInstanceQuery']);
      if (data.hasOwnProperty('historicProcessInstanceQuery'))
        obj.historicProcessInstanceQuery = HistoricProcessInstanceQueryDto.constructFromObject(data['historicProcessInstanceQuery']);
    }
    return obj;
  }
}

/**
 * A list process instance ids to delete.
 * @member {Array.<String>} processInstanceIds
 */
DeleteProcessInstancesDto.prototype.processInstanceIds = undefined;

/**
 * A string with delete reason.
 * @member {String} deleteReason
 */
DeleteProcessInstancesDto.prototype.deleteReason = undefined;

/**
 * Skip execution listener invocation for activities that are started or ended as part of this request.
 * @member {Boolean} skipCustomListeners
 */
DeleteProcessInstancesDto.prototype.skipCustomListeners = undefined;

/**
 * Skip deletion of the subprocesses related to deleted processes as part of this request.
 * @member {Boolean} skipSubprocesses
 */
DeleteProcessInstancesDto.prototype.skipSubprocesses = undefined;

/**
 * @member {module:model/ProcessInstanceQueryDto} processInstanceQuery
 */
DeleteProcessInstancesDto.prototype.processInstanceQuery = undefined;

/**
 * @member {module:model/HistoricProcessInstanceQueryDto} historicProcessInstanceQuery
 */
DeleteProcessInstancesDto.prototype.historicProcessInstanceQuery = undefined;

