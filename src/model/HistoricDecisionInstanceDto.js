/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {HistoricDecisionInputInstanceDto} from './HistoricDecisionInputInstanceDto';
import {HistoricDecisionOutputInstanceDto} from './HistoricDecisionOutputInstanceDto';

/**
 * The HistoricDecisionInstanceDto model module.
 * @module model/HistoricDecisionInstanceDto
 * @version 7.20.0
 */
export class HistoricDecisionInstanceDto {
  /**
   * Constructs a new <code>HistoricDecisionInstanceDto</code>.
   * @alias module:model/HistoricDecisionInstanceDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>HistoricDecisionInstanceDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HistoricDecisionInstanceDto} obj Optional instance to populate.
   * @return {module:model/HistoricDecisionInstanceDto} The populated <code>HistoricDecisionInstanceDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HistoricDecisionInstanceDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('decisionDefinitionId'))
        obj.decisionDefinitionId = ApiClient.convertToType(data['decisionDefinitionId'], 'String');
      if (data.hasOwnProperty('decisionDefinitionKey'))
        obj.decisionDefinitionKey = ApiClient.convertToType(data['decisionDefinitionKey'], 'String');
      if (data.hasOwnProperty('decisionDefinitionName'))
        obj.decisionDefinitionName = ApiClient.convertToType(data['decisionDefinitionName'], 'String');
      if (data.hasOwnProperty('evaluationTime'))
        obj.evaluationTime = ApiClient.convertToType(data['evaluationTime'], 'Date');
      if (data.hasOwnProperty('removalTime'))
        obj.removalTime = ApiClient.convertToType(data['removalTime'], 'Date');
      if (data.hasOwnProperty('processDefinitionId'))
        obj.processDefinitionId = ApiClient.convertToType(data['processDefinitionId'], 'String');
      if (data.hasOwnProperty('processDefinitionKey'))
        obj.processDefinitionKey = ApiClient.convertToType(data['processDefinitionKey'], 'String');
      if (data.hasOwnProperty('processInstanceId'))
        obj.processInstanceId = ApiClient.convertToType(data['processInstanceId'], 'String');
      if (data.hasOwnProperty('caseDefinitionId'))
        obj.caseDefinitionId = ApiClient.convertToType(data['caseDefinitionId'], 'String');
      if (data.hasOwnProperty('caseDefinitionKey'))
        obj.caseDefinitionKey = ApiClient.convertToType(data['caseDefinitionKey'], 'String');
      if (data.hasOwnProperty('caseInstanceId'))
        obj.caseInstanceId = ApiClient.convertToType(data['caseInstanceId'], 'String');
      if (data.hasOwnProperty('activityId'))
        obj.activityId = ApiClient.convertToType(data['activityId'], 'String');
      if (data.hasOwnProperty('activityInstanceId'))
        obj.activityInstanceId = ApiClient.convertToType(data['activityInstanceId'], 'String');
      if (data.hasOwnProperty('tenantId'))
        obj.tenantId = ApiClient.convertToType(data['tenantId'], 'String');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'String');
      if (data.hasOwnProperty('inputs'))
        obj.inputs = ApiClient.convertToType(data['inputs'], [HistoricDecisionInputInstanceDto]);
      if (data.hasOwnProperty('ouputs'))
        obj.ouputs = ApiClient.convertToType(data['ouputs'], [HistoricDecisionOutputInstanceDto]);
      if (data.hasOwnProperty('collectResultValue'))
        obj.collectResultValue = ApiClient.convertToType(data['collectResultValue'], 'Number');
      if (data.hasOwnProperty('rootDecisionInstanceId'))
        obj.rootDecisionInstanceId = ApiClient.convertToType(data['rootDecisionInstanceId'], 'String');
      if (data.hasOwnProperty('rootProcessInstanceId'))
        obj.rootProcessInstanceId = ApiClient.convertToType(data['rootProcessInstanceId'], 'String');
      if (data.hasOwnProperty('decisionRequirementsDefinitionId'))
        obj.decisionRequirementsDefinitionId = ApiClient.convertToType(data['decisionRequirementsDefinitionId'], 'String');
      if (data.hasOwnProperty('decisionRequirementsDefinitionKey'))
        obj.decisionRequirementsDefinitionKey = ApiClient.convertToType(data['decisionRequirementsDefinitionKey'], 'String');
    }
    return obj;
  }
}

/**
 * The id of the decision instance.
 * @member {String} id
 */
HistoricDecisionInstanceDto.prototype.id = undefined;

/**
 * The id of the decision definition that this decision instance belongs to.
 * @member {String} decisionDefinitionId
 */
HistoricDecisionInstanceDto.prototype.decisionDefinitionId = undefined;

/**
 * The key of the decision definition that this decision instance belongs to.
 * @member {String} decisionDefinitionKey
 */
HistoricDecisionInstanceDto.prototype.decisionDefinitionKey = undefined;

/**
 * The name of the decision definition that this decision instance belongs to.
 * @member {String} decisionDefinitionName
 */
HistoricDecisionInstanceDto.prototype.decisionDefinitionName = undefined;

/**
 * The time the instance was evaluated.  [Default format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} evaluationTime
 */
HistoricDecisionInstanceDto.prototype.evaluationTime = undefined;

/**
 * The time after which the instance should be removed by the History Cleanup job. [Default format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} removalTime
 */
HistoricDecisionInstanceDto.prototype.removalTime = undefined;

/**
 * The id of the process definition that this decision instance belongs to.
 * @member {String} processDefinitionId
 */
HistoricDecisionInstanceDto.prototype.processDefinitionId = undefined;

/**
 * The key of the process definition that this decision instance belongs to.
 * @member {String} processDefinitionKey
 */
HistoricDecisionInstanceDto.prototype.processDefinitionKey = undefined;

/**
 * The id of the process instance that this decision instance belongs to.
 * @member {String} processInstanceId
 */
HistoricDecisionInstanceDto.prototype.processInstanceId = undefined;

/**
 * The id of the case definition that this decision instance belongs to.
 * @member {String} caseDefinitionId
 */
HistoricDecisionInstanceDto.prototype.caseDefinitionId = undefined;

/**
 * The key of the case definition that this decision instance belongs to.
 * @member {String} caseDefinitionKey
 */
HistoricDecisionInstanceDto.prototype.caseDefinitionKey = undefined;

/**
 * The id of the case instance that this decision instance belongs to.
 * @member {String} caseInstanceId
 */
HistoricDecisionInstanceDto.prototype.caseInstanceId = undefined;

/**
 * The id of the activity that this decision instance belongs to.
 * @member {String} activityId
 */
HistoricDecisionInstanceDto.prototype.activityId = undefined;

/**
 * The id of the activity instance that this decision instance belongs to.
 * @member {String} activityInstanceId
 */
HistoricDecisionInstanceDto.prototype.activityInstanceId = undefined;

/**
 * The tenant id of the historic decision instance.
 * @member {String} tenantId
 */
HistoricDecisionInstanceDto.prototype.tenantId = undefined;

/**
 * The id of the authenticated user that has evaluated this decision instance without a process or case instance.
 * @member {String} userId
 */
HistoricDecisionInstanceDto.prototype.userId = undefined;

/**
 * The list of decision input values. **Only exists** if `includeInputs` was set to `true` in the query.
 * @member {Array.<module:model/HistoricDecisionInputInstanceDto>} inputs
 */
HistoricDecisionInstanceDto.prototype.inputs = undefined;

/**
 * The list of decision output values. **Only exists** if `includeOutputs` was set to `true` in the query.
 * @member {Array.<module:model/HistoricDecisionOutputInstanceDto>} ouputs
 */
HistoricDecisionInstanceDto.prototype.ouputs = undefined;

/**
 * The result of the collect aggregation of the decision result if used. `null` if no aggregation was used.
 * @member {Number} collectResultValue
 */
HistoricDecisionInstanceDto.prototype.collectResultValue = undefined;

/**
 * The decision instance id of the evaluated root decision. Can be `null` if this instance is the root decision instance of the evaluation.
 * @member {String} rootDecisionInstanceId
 */
HistoricDecisionInstanceDto.prototype.rootDecisionInstanceId = undefined;

/**
 * The process instance id of the root process instance that initiated the evaluation of this decision. Can be `null` if this decision instance is not evaluated as part of a BPMN process.
 * @member {String} rootProcessInstanceId
 */
HistoricDecisionInstanceDto.prototype.rootProcessInstanceId = undefined;

/**
 * The id of the decision requirements definition that this decision instance belongs to.
 * @member {String} decisionRequirementsDefinitionId
 */
HistoricDecisionInstanceDto.prototype.decisionRequirementsDefinitionId = undefined;

/**
 * The key of the decision requirements definition that this decision instance belongs to.
 * @member {String} decisionRequirementsDefinitionKey
 */
HistoricDecisionInstanceDto.prototype.decisionRequirementsDefinitionKey = undefined;

