/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {VariableValueDto} from './VariableValueDto';

/**
 * The SignalDto model module.
 * @module model/SignalDto
 * @version 7.20.0
 */
export class SignalDto {
  /**
   * Constructs a new <code>SignalDto</code>.
   * @alias module:model/SignalDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>SignalDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SignalDto} obj Optional instance to populate.
   * @return {module:model/SignalDto} The populated <code>SignalDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SignalDto();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('executionId'))
        obj.executionId = ApiClient.convertToType(data['executionId'], 'String');
      if (data.hasOwnProperty('variables'))
        obj.variables = ApiClient.convertToType(data['variables'], {'String': VariableValueDto});
      if (data.hasOwnProperty('tenantId'))
        obj.tenantId = ApiClient.convertToType(data['tenantId'], 'String');
      if (data.hasOwnProperty('withoutTenantId'))
        obj.withoutTenantId = ApiClient.convertToType(data['withoutTenantId'], 'Boolean');
    }
    return obj;
  }
}

/**
 * The name of the signal to deliver.  **Note**: This property is mandatory.
 * @member {String} name
 */
SignalDto.prototype.name = undefined;

/**
 * Optionally specifies a single execution which is notified by the signal.  **Note**: If no execution id is defined the signal is broadcasted to all subscribed handlers. 
 * @member {String} executionId
 */
SignalDto.prototype.executionId = undefined;

/**
 * A JSON object containing variable key-value pairs. Each key is a variable name and each value a JSON variable value object.
 * @member {Object.<String, module:model/VariableValueDto>} variables
 */
SignalDto.prototype.variables = undefined;

/**
 * Specifies a tenant to deliver the signal. The signal can only be received on executions or process definitions which belongs to the given tenant.  **Note**: Cannot be used in combination with executionId.
 * @member {String} tenantId
 */
SignalDto.prototype.tenantId = undefined;

/**
 * If true the signal can only be received on executions or process definitions which belongs to no tenant. Value may not be false as this is the default behavior.  **Note**: Cannot be used in combination with `executionId`.
 * @member {Boolean} withoutTenantId
 */
SignalDto.prototype.withoutTenantId = undefined;

