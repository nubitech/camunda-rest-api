/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The HistoricIdentityLinkLogDto model module.
 * @module model/HistoricIdentityLinkLogDto
 * @version 7.20.0
 */
export class HistoricIdentityLinkLogDto {
  /**
   * Constructs a new <code>HistoricIdentityLinkLogDto</code>.
   * @alias module:model/HistoricIdentityLinkLogDto
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>HistoricIdentityLinkLogDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HistoricIdentityLinkLogDto} obj Optional instance to populate.
   * @return {module:model/HistoricIdentityLinkLogDto} The populated <code>HistoricIdentityLinkLogDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new HistoricIdentityLinkLogDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('time'))
        obj.time = ApiClient.convertToType(data['time'], 'Date');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('userId'))
        obj.userId = ApiClient.convertToType(data['userId'], 'String');
      if (data.hasOwnProperty('groupId'))
        obj.groupId = ApiClient.convertToType(data['groupId'], 'String');
      if (data.hasOwnProperty('taskId'))
        obj.taskId = ApiClient.convertToType(data['taskId'], 'String');
      if (data.hasOwnProperty('processDefinitionId'))
        obj.processDefinitionId = ApiClient.convertToType(data['processDefinitionId'], 'String');
      if (data.hasOwnProperty('processDefinitionKey'))
        obj.processDefinitionKey = ApiClient.convertToType(data['processDefinitionKey'], 'String');
      if (data.hasOwnProperty('operationType'))
        obj.operationType = ApiClient.convertToType(data['operationType'], 'String');
      if (data.hasOwnProperty('assignerId'))
        obj.assignerId = ApiClient.convertToType(data['assignerId'], 'String');
      if (data.hasOwnProperty('tenantId'))
        obj.tenantId = ApiClient.convertToType(data['tenantId'], 'String');
      if (data.hasOwnProperty('removalTime'))
        obj.removalTime = ApiClient.convertToType(data['removalTime'], 'Date');
      if (data.hasOwnProperty('rootProcessInstanceId'))
        obj.rootProcessInstanceId = ApiClient.convertToType(data['rootProcessInstanceId'], 'String');
    }
    return obj;
  }
}

/**
 * Id of the Historic identity link entry.
 * @member {String} id
 */
HistoricIdentityLinkLogDto.prototype.id = undefined;

/**
 * The time when the identity link is logged.  [Default format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} time
 */
HistoricIdentityLinkLogDto.prototype.time = undefined;

/**
 * The type of identity link (candidate/assignee/owner).
 * @member {String} type
 */
HistoricIdentityLinkLogDto.prototype.type = undefined;

/**
 * The id of the user/assignee.
 * @member {String} userId
 */
HistoricIdentityLinkLogDto.prototype.userId = undefined;

/**
 * The id of the group.
 * @member {String} groupId
 */
HistoricIdentityLinkLogDto.prototype.groupId = undefined;

/**
 * The id of the task.
 * @member {String} taskId
 */
HistoricIdentityLinkLogDto.prototype.taskId = undefined;

/**
 * The id of the process definition.
 * @member {String} processDefinitionId
 */
HistoricIdentityLinkLogDto.prototype.processDefinitionId = undefined;

/**
 * The key of the process definition.
 * @member {String} processDefinitionKey
 */
HistoricIdentityLinkLogDto.prototype.processDefinitionKey = undefined;

/**
 * Type of operation (add/delete).
 * @member {String} operationType
 */
HistoricIdentityLinkLogDto.prototype.operationType = undefined;

/**
 * The id of the assigner.
 * @member {String} assignerId
 */
HistoricIdentityLinkLogDto.prototype.assignerId = undefined;

/**
 * The id of the tenant.
 * @member {String} tenantId
 */
HistoricIdentityLinkLogDto.prototype.tenantId = undefined;

/**
 * The time after which the identity link should be removed by the History Cleanup job.  [Default format](https://docs.camunda.org/manual/develop/reference/rest/overview/date-format/) `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.
 * @member {Date} removalTime
 */
HistoricIdentityLinkLogDto.prototype.removalTime = undefined;

/**
 * The process instance id of the root process instance that initiated the process containing this identity link.
 * @member {String} rootProcessInstanceId
 */
HistoricIdentityLinkLogDto.prototype.rootProcessInstanceId = undefined;

