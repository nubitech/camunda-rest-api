/*
 * Camunda Platform REST API
 * OpenApi Spec for Camunda Platform REST API.
 *
 * OpenAPI spec version: 7.20.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CamundaRestApi);
  }
}(this, function(expect, CamundaRestApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('MessageCorrelationResultWithVariableDto', function() {
      beforeEach(function() {
        instance = new CamundaRestApi.MessageCorrelationResultWithVariableDto();
      });

      it('should create an instance of MessageCorrelationResultWithVariableDto', function() {
        // TODO: update the code to test MessageCorrelationResultWithVariableDto
        expect(instance).to.be.a(CamundaRestApi.MessageCorrelationResultWithVariableDto);
      });

      it('should have the property resultType (base name: "resultType")', function() {
        // TODO: update the code to test the property resultType
        expect(instance).to.have.property('resultType');
        // expect(instance.resultType).to.be(expectedValueLiteral);
      });

      it('should have the property processInstance (base name: "processInstance")', function() {
        // TODO: update the code to test the property processInstance
        expect(instance).to.have.property('processInstance');
        // expect(instance.processInstance).to.be(expectedValueLiteral);
      });

      it('should have the property execution (base name: "execution")', function() {
        // TODO: update the code to test the property execution
        expect(instance).to.have.property('execution');
        // expect(instance.execution).to.be(expectedValueLiteral);
      });

      it('should have the property variables (base name: "variables")', function() {
        // TODO: update the code to test the property variables
        expect(instance).to.have.property('variables');
        // expect(instance.variables).to.be(expectedValueLiteral);
      });

    });
  });

}));
